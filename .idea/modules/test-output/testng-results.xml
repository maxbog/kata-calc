<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="54" started-at="2016-03-18T08:16:20Z" finished-at="2016-03-18T08:16:20Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="54" started-at="2016-03-18T08:16:20Z" finished-at="2016-03-18T08:16:20Z">
      <class name="calc.ParserSpecification">
        <test-method status="PASS" signature="shouldParseInputCorrectly(java.util.List, calc.Ast.Ast)[pri:0, instance:calc.ParserSpecification@6073f712]" name="shouldParseInputCorrectly" duration-ms="36" started-at="2016-03-18T09:16:20Z" data-provider="parserDataProvider" finished-at="2016-03-18T09:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Token{type=number, number=1}, Token{type=operator, oper=Plus}, Token{type=number, number=2}, Token{type=operator, oper=EndOfStatement}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Program 
[Add [Number 1] [Number 2]]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldParseInputCorrectly -->
        <test-method status="PASS" signature="shouldParseInputCorrectly(java.util.List, calc.Ast.Ast)[pri:0, instance:calc.ParserSpecification@6073f712]" name="shouldParseInputCorrectly" duration-ms="0" started-at="2016-03-18T09:16:20Z" data-provider="parserDataProvider" finished-at="2016-03-18T09:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Token{type=operator, oper=Let}, Token{type=identifier, id=x}, Token{type=operator, oper=Assign}, Token{type=number, number=2}, Token{type=operator, oper=EndOfStatement}, Token{type=identifier, id=x}, Token{type=operator, oper=Times}, Token{type=identifier, id=sqrt}, Token{type=operator, oper=LeftParen}, Token{type=number, number=8}, Token{type=operator, oper=RightParen}, Token{type=operator, oper=EndOfStatement}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Program 
[Assign [Var x] [Number 2]]
[Multiply [Var x] [Call sqrt [Number 8]]]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldParseInputCorrectly -->
        <test-method status="PASS" signature="shouldParseInputCorrectly(java.util.List, calc.Ast.Ast)[pri:0, instance:calc.ParserSpecification@6073f712]" name="shouldParseInputCorrectly" duration-ms="0" started-at="2016-03-18T09:16:20Z" data-provider="parserDataProvider" finished-at="2016-03-18T09:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Token{type=operator, oper=Let}, Token{type=identifier, id=x}, Token{type=operator, oper=Assign}, Token{type=identifier, id=sqrt}, Token{type=operator, oper=LeftParen}, Token{type=operator, oper=Minus}, Token{type=number, number=5}, Token{type=operator, oper=RightParen}, Token{type=operator, oper=EndOfStatement}, Token{type=operator, oper=Let}, Token{type=identifier, id=y}, Token{type=operator, oper=Assign}, Token{type=number, number=7}, Token{type=operator, oper=EndOfStatement}, Token{type=identifier, id=x}, Token{type=operator, oper=Divide}, Token{type=identifier, id=y}, Token{type=operator, oper=EndOfStatement}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Program 
[Assign [Var x] [Call sqrt [Negate [Number 5]]]]
[Assign [Var y] [Number 7]]
[Divide [Var x] [Var y]]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldParseInputCorrectly -->
        <test-method status="PASS" signature="shouldParseInputCorrectly(java.util.List, calc.Ast.Ast)[pri:0, instance:calc.ParserSpecification@6073f712]" name="shouldParseInputCorrectly" duration-ms="0" started-at="2016-03-18T09:16:20Z" data-provider="parserDataProvider" finished-at="2016-03-18T09:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Token{type=number, number=1}, Token{type=operator, oper=Divide}, Token{type=number, number=0}, Token{type=operator, oper=EndOfStatement}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Program 
[Divide [Number 1] [Number 0]]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldParseInputCorrectly -->
      </class> <!-- calc.ParserSpecification -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
